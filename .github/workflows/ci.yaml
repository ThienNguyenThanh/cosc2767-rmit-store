name: ci

on:
  push:
    branches:
      - 'feat'
  pull_request:
    branches:
      - 'feat'

env:
  # Docker Hub
  REGISTRY: docker.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  unit-test:
    name: PHPUnit Test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: php-actions/composer@v6

      - name: PHPUnit Tests
        uses: php-actions/phpunit@v3
        with:
          bootstrap: vendor/autoload.php
          configuration: test/phpunit.xml
          args: --coverage-text

  # selenium-test:
  #   name: Selenium Test
  #   needs: unit-test # Need unit-test to be success
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3

  #     - name: Set up Python
  #       uses: actions/setup-python@v2
  #       with:
  #         python-version: '3.9'

  #     - name: Installed package list
  #       run: apt list --installed

  #     - name: Install all necessary packages
  #       run: pip install requests webdriver-manager selenium

  #     - name: Run the scraping script
  #       run: python selenium_test.py

  build:
    runs-on: ubuntu-latest
    needs: selenium-test
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # Metadata information for build process
      - name: Prepare metadata
        id: meta
        shell: bash
        run: |
          DOCKER_IMAGE=${{ env.IMAGE_NAME }}
          VERSION=latest
          SHORTREF=${GITHUB_SHA::8}
          # Tag with both latest and latest commit SHA
          TAGS="${DOCKER_IMAGE}:${VERSION},${DOCKER_IMAGE}:${SHORTREF}"
          # Set output parameters.
          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=docker_image::${DOCKER_IMAGE}

      # Install signing lib for Docker image (except on PR)
      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@main
        with:
          cosign-release: 'v1.11.0'

      - name: Setup Docker buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      # Login against a Docker registry (except on PR)
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      # Build and Push image (except on PR)
      - name: Build and Push Docker image to Registry
        id: build-and-push
        uses: docker/build-push-action@v3
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: ./bin/${{ env.PHPVERSION }}
          file: ./Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}

      # Signed the published Docker image (except on PR)
      - name: Sign the published Docker image
        if: ${{ github.event_name != 'pull_request' }}
        env:
          COSIGN_EXPERIMENTAL: 'true'
        # This step uses the identity token to provision an ephemeral certificate
        # against the sigstore community Fulcio instance.
        run: echo "${{ steps.meta.outputs.sha_short }}" | xargs -I {} cosign sign {}@${{ steps.build-and-push.outputs.digest }}
