name: cd-pro

on:
  push:
    branches:
      - 'main'

env:
  # Docker Hub
  REGISTRY: docker.io
  IMAGE_NAME: ${{ github.repository }}
  PHP_VERSION: 8

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # Metadata information for build process
      - name: Prepare metadata
        id: meta
        shell: bash
        run: |
          DOCKER_IMAGE=${{ env.IMAGE_NAME }}
          VERSION=latest
          SHORTREF=${GITHUB_SHA::7}
          # Tag with both latest and latest commit SHA
          TAGS="${DOCKER_IMAGE}:${VERSION},${DOCKER_IMAGE}:${SHORTREF}"
          # Set output parameters.
          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=docker_image::${DOCKER_IMAGE}

      # Install signing lib for Docker image (except on PR)
      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@main
        with:
          cosign-release: 'v1.11.0'

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@79abd3f86f79a9d68a23c75a09a9a85889262adf

      # Login against a Docker registry (except on PR)
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      # Build and Push image (except on PR)
      - name: Build and Push Docker image to Registry
        id: build-and-push
        uses: docker/build-push-action@v3
        with:
          file: ./bin/php${{ env.PHP_VERSION }}/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}

  deploy-pro:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Update image and deploy on eks
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.WEBAPP_HOST_PRO }}
          username: ${{ secrets.WEBAPP_USERNAME_DEV }}
          key: ${{ secrets.WEBAPP_SSH_KEY_DEV }}
          port: 22 # Default SSH Port
          script: |
            cd cosc2767-rmit-store
            helm upgrade rmitstore heml-charts --install --set-string image.tag=${GITHUB_SHA::7} --timeout 30m0s
            helm repo update


